<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cibr.animal.demo.dao.CibrTaskProcessSampleinputMapper" >
  <resultMap id="BaseResultMap" type="com.cibr.animal.demo.entity.CibrTaskProcessSampleinput" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="processId" property="processid" jdbcType="VARCHAR" />
    <result column="sampleName" property="samplename" jdbcType="VARCHAR" />
    <result column="species" property="species" jdbcType="VARCHAR" />
    <result column="tissue" property="tissue" jdbcType="VARCHAR" />
    <result column="sampleMsg" property="samplemsg" jdbcType="VARCHAR" />
    <result column="sampleStatu" property="samplestatu" jdbcType="VARCHAR" />
    <result column="tissueNumber" property="tissuenumber" jdbcType="VARCHAR" />
    <result column="bloodVolume" property="bloodvolume" jdbcType="VARCHAR" />
    <result column="concentration" property="concentration" jdbcType="VARCHAR" />
    <result column="sampleVolume" property="samplevolume" jdbcType="VARCHAR" />
    <result column="totalNumber" property="totalnumber" jdbcType="VARCHAR" />
    <result column="cellLife" property="celllife" jdbcType="VARCHAR" />
    <result column="cellSort" property="cellsort" jdbcType="VARCHAR" />
    <result column="databaseType" property="databasetype" jdbcType="VARCHAR" />
    <result column="SequencingPlatform" property="sequencingplatform" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="currentStatu" property="currentstatu" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, processId, sampleName, species, tissue, sampleMsg, sampleStatu, tissueNumber, 
    bloodVolume, concentration, sampleVolume, totalNumber, cellLife, cellSort, databaseType, 
    SequencingPlatform, remarks, creater, createTime, currentStatu
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinputExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cibr_task_process_sampleinput
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from cibr_task_process_sampleinput
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cibr_task_process_sampleinput
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinputExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from cibr_task_process_sampleinput
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinput" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cibr_task_process_sampleinput (id, processId, sampleName, 
      species, tissue, sampleMsg, 
      sampleStatu, tissueNumber, bloodVolume, 
      concentration, sampleVolume, totalNumber, 
      cellLife, cellSort, databaseType, 
      SequencingPlatform, remarks, creater, 
      createTime, currentStatu)
    values (#{id,jdbcType=VARCHAR}, #{processid,jdbcType=VARCHAR}, #{samplename,jdbcType=VARCHAR}, 
      #{species,jdbcType=VARCHAR}, #{tissue,jdbcType=VARCHAR}, #{samplemsg,jdbcType=VARCHAR}, 
      #{samplestatu,jdbcType=VARCHAR}, #{tissuenumber,jdbcType=VARCHAR}, #{bloodvolume,jdbcType=VARCHAR}, 
      #{concentration,jdbcType=VARCHAR}, #{samplevolume,jdbcType=VARCHAR}, #{totalnumber,jdbcType=VARCHAR}, 
      #{celllife,jdbcType=VARCHAR}, #{cellsort,jdbcType=VARCHAR}, #{databasetype,jdbcType=VARCHAR}, 
      #{sequencingplatform,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{currentstatu,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinput" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into cibr_task_process_sampleinput
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="processid != null" >
        processId,
      </if>
      <if test="samplename != null" >
        sampleName,
      </if>
      <if test="species != null" >
        species,
      </if>
      <if test="tissue != null" >
        tissue,
      </if>
      <if test="samplemsg != null" >
        sampleMsg,
      </if>
      <if test="samplestatu != null" >
        sampleStatu,
      </if>
      <if test="tissuenumber != null" >
        tissueNumber,
      </if>
      <if test="bloodvolume != null" >
        bloodVolume,
      </if>
      <if test="concentration != null" >
        concentration,
      </if>
      <if test="samplevolume != null" >
        sampleVolume,
      </if>
      <if test="totalnumber != null" >
        totalNumber,
      </if>
      <if test="celllife != null" >
        cellLife,
      </if>
      <if test="cellsort != null" >
        cellSort,
      </if>
      <if test="databasetype != null" >
        databaseType,
      </if>
      <if test="sequencingplatform != null" >
        SequencingPlatform,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="currentstatu != null" >
        currentStatu,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="processid != null" >
        #{processid,jdbcType=VARCHAR},
      </if>
      <if test="samplename != null" >
        #{samplename,jdbcType=VARCHAR},
      </if>
      <if test="species != null" >
        #{species,jdbcType=VARCHAR},
      </if>
      <if test="tissue != null" >
        #{tissue,jdbcType=VARCHAR},
      </if>
      <if test="samplemsg != null" >
        #{samplemsg,jdbcType=VARCHAR},
      </if>
      <if test="samplestatu != null" >
        #{samplestatu,jdbcType=VARCHAR},
      </if>
      <if test="tissuenumber != null" >
        #{tissuenumber,jdbcType=VARCHAR},
      </if>
      <if test="bloodvolume != null" >
        #{bloodvolume,jdbcType=VARCHAR},
      </if>
      <if test="concentration != null" >
        #{concentration,jdbcType=VARCHAR},
      </if>
      <if test="samplevolume != null" >
        #{samplevolume,jdbcType=VARCHAR},
      </if>
      <if test="totalnumber != null" >
        #{totalnumber,jdbcType=VARCHAR},
      </if>
      <if test="celllife != null" >
        #{celllife,jdbcType=VARCHAR},
      </if>
      <if test="cellsort != null" >
        #{cellsort,jdbcType=VARCHAR},
      </if>
      <if test="databasetype != null" >
        #{databasetype,jdbcType=VARCHAR},
      </if>
      <if test="sequencingplatform != null" >
        #{sequencingplatform,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentstatu != null" >
        #{currentstatu,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinputExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from cibr_task_process_sampleinput
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cibr_task_process_sampleinput
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.processid != null" >
        processId = #{record.processid,jdbcType=VARCHAR},
      </if>
      <if test="record.samplename != null" >
        sampleName = #{record.samplename,jdbcType=VARCHAR},
      </if>
      <if test="record.species != null" >
        species = #{record.species,jdbcType=VARCHAR},
      </if>
      <if test="record.tissue != null" >
        tissue = #{record.tissue,jdbcType=VARCHAR},
      </if>
      <if test="record.samplemsg != null" >
        sampleMsg = #{record.samplemsg,jdbcType=VARCHAR},
      </if>
      <if test="record.samplestatu != null" >
        sampleStatu = #{record.samplestatu,jdbcType=VARCHAR},
      </if>
      <if test="record.tissuenumber != null" >
        tissueNumber = #{record.tissuenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodvolume != null" >
        bloodVolume = #{record.bloodvolume,jdbcType=VARCHAR},
      </if>
      <if test="record.concentration != null" >
        concentration = #{record.concentration,jdbcType=VARCHAR},
      </if>
      <if test="record.samplevolume != null" >
        sampleVolume = #{record.samplevolume,jdbcType=VARCHAR},
      </if>
      <if test="record.totalnumber != null" >
        totalNumber = #{record.totalnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.celllife != null" >
        cellLife = #{record.celllife,jdbcType=VARCHAR},
      </if>
      <if test="record.cellsort != null" >
        cellSort = #{record.cellsort,jdbcType=VARCHAR},
      </if>
      <if test="record.databasetype != null" >
        databaseType = #{record.databasetype,jdbcType=VARCHAR},
      </if>
      <if test="record.sequencingplatform != null" >
        SequencingPlatform = #{record.sequencingplatform,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentstatu != null" >
        currentStatu = #{record.currentstatu,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cibr_task_process_sampleinput
    set id = #{record.id,jdbcType=VARCHAR},
      processId = #{record.processid,jdbcType=VARCHAR},
      sampleName = #{record.samplename,jdbcType=VARCHAR},
      species = #{record.species,jdbcType=VARCHAR},
      tissue = #{record.tissue,jdbcType=VARCHAR},
      sampleMsg = #{record.samplemsg,jdbcType=VARCHAR},
      sampleStatu = #{record.samplestatu,jdbcType=VARCHAR},
      tissueNumber = #{record.tissuenumber,jdbcType=VARCHAR},
      bloodVolume = #{record.bloodvolume,jdbcType=VARCHAR},
      concentration = #{record.concentration,jdbcType=VARCHAR},
      sampleVolume = #{record.samplevolume,jdbcType=VARCHAR},
      totalNumber = #{record.totalnumber,jdbcType=VARCHAR},
      cellLife = #{record.celllife,jdbcType=VARCHAR},
      cellSort = #{record.cellsort,jdbcType=VARCHAR},
      databaseType = #{record.databasetype,jdbcType=VARCHAR},
      SequencingPlatform = #{record.sequencingplatform,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      creater = #{record.creater,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      currentStatu = #{record.currentstatu,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinput" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cibr_task_process_sampleinput
    <set >
      <if test="processid != null" >
        processId = #{processid,jdbcType=VARCHAR},
      </if>
      <if test="samplename != null" >
        sampleName = #{samplename,jdbcType=VARCHAR},
      </if>
      <if test="species != null" >
        species = #{species,jdbcType=VARCHAR},
      </if>
      <if test="tissue != null" >
        tissue = #{tissue,jdbcType=VARCHAR},
      </if>
      <if test="samplemsg != null" >
        sampleMsg = #{samplemsg,jdbcType=VARCHAR},
      </if>
      <if test="samplestatu != null" >
        sampleStatu = #{samplestatu,jdbcType=VARCHAR},
      </if>
      <if test="tissuenumber != null" >
        tissueNumber = #{tissuenumber,jdbcType=VARCHAR},
      </if>
      <if test="bloodvolume != null" >
        bloodVolume = #{bloodvolume,jdbcType=VARCHAR},
      </if>
      <if test="concentration != null" >
        concentration = #{concentration,jdbcType=VARCHAR},
      </if>
      <if test="samplevolume != null" >
        sampleVolume = #{samplevolume,jdbcType=VARCHAR},
      </if>
      <if test="totalnumber != null" >
        totalNumber = #{totalnumber,jdbcType=VARCHAR},
      </if>
      <if test="celllife != null" >
        cellLife = #{celllife,jdbcType=VARCHAR},
      </if>
      <if test="cellsort != null" >
        cellSort = #{cellsort,jdbcType=VARCHAR},
      </if>
      <if test="databasetype != null" >
        databaseType = #{databasetype,jdbcType=VARCHAR},
      </if>
      <if test="sequencingplatform != null" >
        SequencingPlatform = #{sequencingplatform,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentstatu != null" >
        currentStatu = #{currentstatu,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cibr.animal.demo.entity.CibrTaskProcessSampleinput" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update cibr_task_process_sampleinput
    set processId = #{processid,jdbcType=VARCHAR},
      sampleName = #{samplename,jdbcType=VARCHAR},
      species = #{species,jdbcType=VARCHAR},
      tissue = #{tissue,jdbcType=VARCHAR},
      sampleMsg = #{samplemsg,jdbcType=VARCHAR},
      sampleStatu = #{samplestatu,jdbcType=VARCHAR},
      tissueNumber = #{tissuenumber,jdbcType=VARCHAR},
      bloodVolume = #{bloodvolume,jdbcType=VARCHAR},
      concentration = #{concentration,jdbcType=VARCHAR},
      sampleVolume = #{samplevolume,jdbcType=VARCHAR},
      totalNumber = #{totalnumber,jdbcType=VARCHAR},
      cellLife = #{celllife,jdbcType=VARCHAR},
      cellSort = #{cellsort,jdbcType=VARCHAR},
      databaseType = #{databasetype,jdbcType=VARCHAR},
      SequencingPlatform = #{sequencingplatform,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      currentStatu = #{currentstatu,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>